#!/bin/sh

# 맥 버전 체크를 위한 변수 초기화
osx_major_version=$(sw_vers -productVersion | cut -d. -f1)
osx_minor_version=$(sw_vers -productVersion | cut -d. -f2)
osx_patch_version=$(sw_vers -productVersion | cut -d. -f3)
osx_patch_version=${osx_patch_version:-0}
osx_version=$((${osx_major_version} * 10000 + ${osx_minor_version} * 100 + ${osx_patch_version}))

# 홈브류에 의해 설치된 패키지 기본 경로 접두어관련 변수
brew_prefix=$(brew --prefix | sed 's#/#\\\/#g')

# 홈브류에 의해 설치 가능한 PHP 버전
brew_array=("5.6","7.0","7.1","7.2","7.3","7.4")
php_array=("php@5.6" "php@7.0" "php@7.1" "php@7.2" "php@7.3" "php@7.4")
php_installed_array=()
php_version="php@$1"
php_opt_path="$brew_prefix\/opt\/"

# 버전에 따른 아파치 환경설정 모듈결정을 위한 변수
php5_module="php5_module"
apache_php5_lib_path="\/lib\/httpd\/modules\/libphp5.so"
php7_module="php7_module"
apache_php7_lib_path="\/lib\/httpd\/modules\/libphp7.so"

# 아마피츼 네이티브 모듈을 결정한다. 맥 OS 10.13 이상의 경우 PHP 5.6 적용시 에러가 발생한다.
native_osx_php_apache_module="LoadModule ${php5_module} libexec\/apache2\/libphp5.so"
if [ "${osx_version}" -ge "101300" ]; then
    native_osx_php_apache_module="LoadModule ${php7_module} libexec\/apache2\/libphp7.so"
fi

# 기본은 PHP 7.0 을 기본으로 하고 요청 버전이 5.6인 경우 모듈 변경
php_module="$php7_module"
apache_php_lib_path="$apache_php7_lib_path"
if [[ $(echo "$php_version" | sed 's/^php@//' | sed 's/\.//') -lt "70" ]]; then
  echo "OS X 10.13.0 이후의 버전에서는 정상 동작하지 않을 수 있습니다."
  php_module="$php5_module"
  apache_php_lib_path="$apache_php5_lib_path"
fi

# 아파치 환경설정 파일 및 적용 대상 모듈 변수 지정
apache_conf_path="/usr/local/etc/httpd/httpd.conf"
apache_php_mod_path="$php_opt_path$php_version$apache_php_lib_path"

# 홈브류를 이용하여
for i in ${php_array[*]}; do
    if [[ -n "$(brew ls --versions "$i")" ]]; then
        php_installed_array+=("$i")
    fi
done

# 지원 가능한 PHP 버전인 경우
if [[ " ${php_array[*]} " == *"$php_version"* ]]; then
    # 요청한 PHP 버전이 성치되어 있으면
    if [[ " ${php_installed_array[*]} " == *"$php_version"* ]]; then

        # 현재의 버전을 변경한다.
        echo "$php_version 버전으로 변경합니다."
        for i in ${php_installed_array[@]}; do
            brew unlink $i
        done
        brew link --force "$php_version"

        # Switch apache
        echo "지금부터 sudo를 이용합니다."
        echo "아파치 환경설정 파일을 변경합니다."

        for j in ${php_installed_array[@]}; do
            loop_php_module="$php5_module"
            loop_apache_php_lib_path="$apache_php5_lib_path"
            if [ $(echo "$j" | sed 's/^php@//' | sed 's/\.//') -ge 70 ]; then
                loop_php_module="$php7_module"
                loop_apache_php_lib_path="$apache_php7_lib_path"
            fi
            apache_module_string="LoadModule $loop_php_module $php_opt_path$j$loop_apache_php_lib_path"
            comment_apache_module_string="#$apache_module_string"

            # 아파치 모듈이 환경설정 파일에 존재하는 경우
            if grep -q "$apache_module_string" "$apache_conf_path"; then
                # 해당 모듈 문자열이 주석으로 처리되지 않은 경우 주석처리한다.
                if ! grep -q "$comment_apache_module_string" "$apache_conf_path"; then
                    sudo sed -i.bak "s/$apache_module_string/$comment_apache_module_string/g" $apache_conf_path
                fi
            # 그렇지 않으면 네이티브 스트링을 주석처리한다.
            else
                sudo sed -i.bak "/$native_osx_php_apache_module/a\\
$comment_apache_module_string\\
" $apache_conf_path
            fi
        done
        # 요청 PHP 버전 주석 삭제
        sudo sed -i.bak "s/\#LoadModule $php_module $apache_php_mod_path/LoadModule $php_module $apache_php_mod_path/g" $apache_conf_path
        echo "Apache Web 서버 재시작"
        sudo apachectl -k restart

	      echo ""
        php -v
        echo ""

        echo "완료되었습니다."
    else
        echo "$php_version 버전은 홈브류를 이용하여 설치되지 않았습니다. 다음 명령을 이용하여 설치하십시오: brew install $php_version"
    fi
else
    echo "알수 없는 PHP 버전입니다. 전환 가능한 PHP 버전:" ${brew_array[@]}
fi
